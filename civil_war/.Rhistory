raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 63
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
test_file <- content(r)
rm(list = c("r"))
raw_text <- read_lines(test_file)
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
bind_rows(master, soldiers)
}
library(tidyverse)
library(jsonlite)
library(httr)
# Soldiers Database ####
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 1000
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r)
rm(list = c("r"))
raw_text <- read_lines(test_file)
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 63
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
test_file <- content(r)
raw_text <- read_lines(test_file)
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
library(tidyverse)
library(jsonlite)
library(httr)
# Soldiers Database ####
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 500
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r)
rm(list = c("r"))
raw_text <- read_lines(test_file)
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 127
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
test_file <- content(r)
raw_text <- read_lines(test_file)
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
rows <- 500
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r)
rm(list = c("r"))
class(test_file)
library(tidyverse)
library(jsonlite)
library(httr)
# Soldiers Database ####
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 500
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r)
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 127
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
library(tidyverse)
library(jsonlite)
library(httr)
# Soldiers Database ####
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 500
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r)
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 127
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
test_file <- content(r)
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
library(tidyverse)
library(jsonlite)
library(httr)
# Soldiers Database ####
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 500
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 127
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
test_file <- content(r)
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
library(tidyverse)
library(jsonlite)
library(httr)
# Soldiers Database ####
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 500
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 127
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
test_file <- content(r, as = 'text', encoding = "latin1")
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
library(tidyverse)
library(jsonlite)
library(httr)
# Soldiers Database ####
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 200
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 313
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
test_file <- content(r, as = 'text', encoding = "latin1")
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
library(tidyverse)
library(jsonlite)
library(httr)
# Soldiers Database ####
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 200
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 312
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
test_file <- content(r, as = 'text', encoding = "latin1")
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
rows <- 200
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
raw_text
write(raw_text, "json_test.txt")
raw_text[length(raw_text)]
raw_text[length(raw_text)-1]
library(tidyverse)
library(jsonlite)
library(httr)
# Soldiers Database ####
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 200
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)-1] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
# sample for loop for iteration if start number can be 1 rather than 0
num_iter <- 312
master <- soldiers
for (i in num_iter) {
row_iter <- rows + (rows*(i))
start_iter <- start + (rows*(i))
r <- GET(paste0(url1,row_iter,url2,start_iter,url3))
test_file <- content(r, as = 'text', encoding = "latin1")
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
raw_text[1] <- "{"
raw_text[length(raw_text)-1] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
rows <- 200
start <- 1
test_file <- content(r, as = 'text', encoding = 'latin1')
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)-1] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
rows <- 200
start <- 1
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
rm(list = c("r"))
write(test_file, "test.txt")
raw_text <- read_lines("test.txt")
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)-1] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
source('C:/Users/cdawg/git_repos/r_hackaround/civil_war/scraping.R', echo=TRUE)
#get in 10k iter worked with fromJSON(), just failed to parse because of structure
#grab data with httr::GET() to clean out jquery headers, strip lines, then pass as JSON
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
rm(list = c("r"))
raw_text <- read_lines(test_file)
rm(list = c("test_file"))
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
rm(list = c("raw_text"))
soldiers <- tibble(raw_json[2]$response$docs)
rm(list = c("raw_json"))
add_soldiers <- function(rows, start, master) {
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
raw_text <- read_lines(test_file)
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
add_soldiers(200, 1, master)
add_soldiers(200, 1, master)
library(tidyverse)
library(jsonlite)
library(httr)
url1 <- "https://www.nps.gov/solr-cw/?fl=Image_URL,Title,Side,State,Alternate_Name,Battle_Unit,Battle_Unit_Code,Battle_Unit_Function,PageURL&defType=edismax&fq=Type:%22Soldier%22&fq=Category:%22Civil%20War%22&json.wrf=jQuery112408886962018818634_1644853156885&rows="
url2 <- "00&wt=json&q=*&start="
url3 <- "&facet=true&facet.mincount=1&facet.limit=-1&facet.sort=count&facet.method=enum&facet.field=Side&facet.field=State&facet.field=Battle_Unit_Function&hl=true&hl.fl=text%2C+title&hl.simple.pre=%3Cem%3E&hl.simple.post=%3C%2Fem%3E&hl.snippets=3&_=1644853156887"
rows <- 200
start <- 1
add_soldiers <- function(rows, start, master) {
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
raw_text <- read_lines(test_file)
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
bind_rows(master, soldiers)
}
add_soldiers(200, 1, master)
master <- tibble()
add_soldiers(200, 1, master)
master <- bind_rows(master, soldiers)
add_soldiers <- function(rows, start, master) {
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
raw_text <- read_lines(test_file)
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
master <- bind_rows(master, soldiers)
}
rows <- 200
start <- 1
master <- tibble()
add_soldiers(200, 1, master)
add_soldiers <- function(rows, start, master) {
r <- GET(paste0(url1,rows,url2,start,url3))
test_file <- content(r, as = 'text', encoding = 'latin1')
raw_text <- read_lines(test_file)
raw_text[1] <- "{"
raw_text[length(raw_text)] <- gsub("[()]", "", raw_text[length(raw_text)])
raw_json <- fromJSON(raw_text)
soldiers <- tibble(raw_json[2]$response$docs)
master <- bind_rows(master, soldiers)
return(master)
}
rows <- 200
start <- 1
master <- tibble()
master <- add_soldiers(200, 1, master)
master <- add_soldiers(200, 201, master)
master %>%
distinct() %>%
nrow()
master %>%
distinct()
master <- tibble()
master <- add_soldiers(1000, 1, master)
master <- add_soldiers(1000, 100000, master)
master <- tibble()
master <- add_soldiers(1000, 1, master)
master <- add_soldiers(1000, 100001, master)
master <- add_soldiers(500, 100001, master)
master <- add_soldiers(200, 100001, master)
master <- add_soldiers(200, 100001, master)
