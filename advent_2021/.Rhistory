count <- 0
for (i in 1:length(digits_sep)) {
temp <- digits_sep[[i]]
count <- count + length(which(nchar(temp)==2 | nchar(temp)==3 | nchar(temp)==4 | nchar(temp)==7))
}
length(digits_sep)
which(nchar(temp)==2 | nchar(temp)==3 | nchar(temp)==4 | nchar(temp)==7)
View(digits_sep)
digits
input <- read_lines("day_08.txt")
sample <- read_lines("day_08_sample.txt")
digits_sep <- str_split(input, pattern = " ")
View(digits_sep)
for (line in digits_sep) {
line <- line[12:15]
}
count <- 0
for (i in 1:length(digits_sep)) {
temp <- digits_sep[[i]]
count <- count + length(which(nchar(temp)==2 | nchar(temp)==3 | nchar(temp)==4 | nchar(temp)==7))
}
input <- read_lines("day_08.txt")
sample <- read_lines("day_08_sample.txt")
digits_sep <- str_split(input, pattern = " ")
for (line in digits_sep) {
line <- line[12:15]
}
count <- 0
for (i in 1:length(digits_sep)) {
temp <- digits_sep[[i]]
count <- count + length(which(nchar(temp)==2 | nchar(temp)==3 | nchar(temp)==4 | nchar(temp)==7))
}
digits_sep
sample <- read_lines("day_08_sample.txt")
digits_sep <- str_split(input, pattern = " ")
count <- 0
for (i in 1:length(digits_sep)) {
temp <- digits_sep[[i]][12:15]
count <- count + length(which(nchar(temp)==2 | nchar(temp)==3 | nchar(temp)==4 | nchar(temp)==7))
}
?which
sample
sample[1]
input[1]
test <- input[1]
test <- sample[1]
test_out <- sample[2]
for (i in 1:length(test)) {
if (nchar(test) == 2) {
gsub(pattern = test[i], replacement = 1, x = test)
}
}
for (i in 1:length(test)) {
if (nchar(test) == 2) {
test <- gsub(pattern = test[i], replacement = 1, x = test)
}
}
test <- str_split(sample[1], pattern = " ")
test_out <- str_split(sample[2], pattern = " ")
for (i in 1:length(test)) {
if (nchar(test) == 2) {
test <- gsub(pattern = test[i], replacement = 1, x = test)
}
}
View(test)
test <- str_split(sample[1], pattern = " ")
test_out <- str_split(sample[2], pattern = " ")
for (i in 1:length(test)) {
if (nchar(test[[i]]) == 2) {
test <- gsub(pattern = test[[i]], replacement = 1, x = test)
}
}
test <- str_split(sample[1], pattern = " ")
test_out <- str_split(sample[2], pattern = " ")
for (i in 1:length(test)) {
if (nchar(test[i]) == 2) {
test <- gsub(pattern = test[i], replacement = 1, x = test)
}
}
View(test)
test <- str_split(sample[1], pattern = " ")
test_out <- str_split(sample[2], pattern = " ")
for (i in 1:length(test[[i]])) {
if (nchar(test[[i]]) == 2) {
test <- gsub(pattern = test[[i]], replacement = 1, x = test)
}
}
test[[i]]
test[[1]]
length(test[[1]])
test <- digits_sep[1]
View(test)
digits_sep <- str_split(sample, pattern = " ")
digits_sep <- str_split(input, pattern = " ")
digits_sep <- str_split(sample, pattern = " ")
View(digits_sep)
digits_sep[1]
digits_sep <- str_split(sample, pattern = " ")
for (i in 1:length(digits_sep)) {
temp <- digits_sep[[i]][1:10]
if (nchar(temp) == 2) {
test <- gsub(pattern = temp, replacement = 1, x = test)
}
}
View(digits_sep)
digits_sep <- str_split(input, pattern = " ")
count <- 0
for (i in 1:length(digits_sep)) {
temp <- digits_sep[[i]][12:15]
count <- count + length(which(nchar(temp)==2 | nchar(temp)==3 | nchar(temp)==4 | nchar(temp)==7))
}
temp <- digits_sep[[1]][1:10]
temp
if (nchar(temp) == 2) {
test <- gsub(pattern = temp, replacement = 1, x = test)
}
if (which(nchar(temp) == 2)) {
test <- gsub(pattern = temp, replacement = 1, x = test)
}
input
sample
sample <- read_lines("day_08_sample.txt")
sample
digits_sep <- str_split(sample, pattern = " ")
View(digits_sep)
tibble(sample)
digit_table <- tibble(sample)
digit_table %>%
separate(sample, sep = " ") %>% View()
cols <- letters[1:15]
digit_table %>%
separate(sample, sep = " ", into = ) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>%
select(-k) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>%
select(-k) %>%
mutate(across(.fns = ~case_when(
nchar(.) == 2 ~ 1,
nchar(.) == 4 ~ 4,
nchar(.) == 3 ~ 7,
nchar(.) == 7 ~ 8
))) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>%
select(-k) %>%
mutate(across(.fns = ~case_when(
nchar(.) == 2 ~ 1,
nchar(.) == 4 ~ 4,
nchar(.) == 3 ~ 7,
nchar(.) == 7 ~ 8,
TRUE ~ .
))) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>%
select(-k) %>%
mutate(across(.fns = ~case_when(
nchar(.) == 2 ~ 1,
nchar(.) == 4 ~ 4,
nchar(.) == 3 ~ 7,
nchar(.) == 7 ~ 8,
TRUE ~ as.character(.)
))) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>%
select(-k) %>%
mutate(across(.fns = ~case_when(
nchar(.) == 2 ~ 1,
nchar(.) == 4 ~ 4,
nchar(.) == 3 ~ 7,
nchar(.) == 7 ~ 8,
nchar(.) > 0 ~ .
))) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>%
select(-k) %>%
mutate(across(.fns = ~case_when(
nchar(.) == 2 ~ 1,
nchar(.) == 4 ~ 4,
nchar(.) == 3 ~ 7,
nchar(.) == 7 ~ 8,
#nchar(.) > 0 ~ .
))) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>%
select(-k) %>%
mutate(across(.fns = ~case_when(
nchar(.) == 2 ~ 1,
nchar(.) == 4 ~ 4,
nchar(.) == 3 ~ 7,
nchar(.) == 7 ~ 8,
#nchar(.) > 0 ~ .
))) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>%
select(-k) %>%
mutate(across(.fns = ~case_when(
nchar(.) == 2 ~ 1,
nchar(.) == 4 ~ 4,
nchar(.) == 3 ~ 7,
nchar(.) == 7 ~ 8,
nchar(.) > 0 ~ as.character(.)
))) %>% View()
digit_table %>%
separate(sample, sep = " ", into = cols) %>%
select(-k) %>%
mutate(across(.fns = ~case_when(
nchar(.) == 2 ~ "1",
nchar(.) == 4 ~ "4",
nchar(.) == 3 ~ "7",
nchar(.) == 7 ~ "8",
TRUE ~ as.character(.)
))) %>% View()
cols_ <- paste0(letters[1:15], "_")
tibble(cols_ = NA)
tibble(matrix(NA, nrow = 10, ncol = 15))
tibble(matrix(000, nrow = 10, ncol = 15))
digits_sep <- str_split(input, pattern = " ")
overall <- 0
for(i in 1:length(digits_sep)){
code <- digits_sep[[i]][12:15]
shapes <- digits_sep[[i]][1:10]
shape1 <- str_split(shapes[which(nchar(shapes)==2)],pattern = "")[[1]] #1
shape4 <- str_split(shapes[which(nchar(shapes)==4)],pattern = "")[[1]] #4
shape7 <- str_split(shapes[which(nchar(shapes)==3)],pattern = "")[[1]] #7
shape8 <- str_split(shapes[which(nchar(shapes)==7)],pattern = "")[[1]] #8
shape069 <- shapes[which(nchar(shapes)==6)] #0,6,9
shape235 <- shapes[which(nchar(shapes)==5)] #2,3,5
for(j in 1:length(shape069)){
shape_ <- str_split(shape069[j],pattern = "")[[1]]
a <- shape1[! shape1 %in% shape_]
b <- shape1[! shape4 %in% shape_]
if(length(a)==0 & length(b)==0){
shape9 <- str_split(shape069[j],pattern = "")[[1]]
}else if(length(a)!=0 & length(b)!=0){
shape6 <- str_split(shape069[j],pattern = "")[[1]]
}else{
shape0 <- str_split(shape069[j],pattern = "")[[1]]
}
}
top_right_char <- shape1[! shape1 %in% shape6]
for(j in 1:length(shape235)){
shape_ <- str_split(shape235[j],pattern = "")[[1]]
a <- length(shape1[! shape1 %in% shape_])==0
b <- top_right_char %in% shape_
if(a){
shape3 <- str_split(shape235[j],pattern = "")[[1]]
}else if(b){
shape2 <- str_split(shape235[j],pattern = "")[[1]]
}else{
shape5 <- str_split(shape235[j],pattern = "")[[1]]
}
}
shapes_list <- list(shape0,shape1,shape2,shape3,shape4,shape5,shape6,shape7,shape8,shape9)
code_deciphered <- vector()
for(k in 1:length(code)){
code_ <- str_split(code[k],pattern = "")[[1]]
for(p in 1:length(shapes_list)){
if(setequal(code_,shapes_list[[p]])){
code_deciphered <- append(code_deciphered,(p-1))
}
}
}
code_deciphered_val <- as.numeric(paste0(code_deciphered,collapse=""))
all_codes <- all_codes + code_deciphered_val
}
for(i in 1:length(digits_sep)){
code <- digits_sep[[i]][12:15]
shapes <- digits_sep[[i]][1:10]
shape1 <- str_split(shapes[which(nchar(shapes)==2)],pattern = "")[[1]] #1
shape4 <- str_split(shapes[which(nchar(shapes)==4)],pattern = "")[[1]] #4
shape7 <- str_split(shapes[which(nchar(shapes)==3)],pattern = "")[[1]] #7
shape8 <- str_split(shapes[which(nchar(shapes)==7)],pattern = "")[[1]] #8
shape069 <- shapes[which(nchar(shapes)==6)] #0,6,9
shape235 <- shapes[which(nchar(shapes)==5)] #2,3,5
for(j in 1:length(shape069)){
shape_ <- str_split(shape069[j],pattern = "")[[1]]
a <- shape1[! shape1 %in% shape_]
b <- shape1[! shape4 %in% shape_]
if(length(a)==0 & length(b)==0){
shape9 <- str_split(shape069[j],pattern = "")[[1]]
}else if(length(a)!=0 & length(b)!=0){
shape6 <- str_split(shape069[j],pattern = "")[[1]]
}else{
shape0 <- str_split(shape069[j],pattern = "")[[1]]
}
}
top_right_char <- shape1[! shape1 %in% shape6]
for(j in 1:length(shape235)){
shape_ <- str_split(shape235[j],pattern = "")[[1]]
a <- length(shape1[! shape1 %in% shape_])==0
b <- top_right_char %in% shape_
if(a){
shape3 <- str_split(shape235[j],pattern = "")[[1]]
}else if(b){
shape2 <- str_split(shape235[j],pattern = "")[[1]]
}else{
shape5 <- str_split(shape235[j],pattern = "")[[1]]
}
}
shapes_list <- list(shape0,shape1,shape2,shape3,shape4,shape5,shape6,shape7,shape8,shape9)
code_deciphered <- vector()
for(k in 1:length(code)){
code_ <- str_split(code[k],pattern = "")[[1]]
for(p in 1:length(shapes_list)){
if(setequal(code_,shapes_list[[p]])){
code_deciphered <- append(code_deciphered,(p-1))
}
}
}
code_deciphered_val <- as.numeric(paste0(code_deciphered,collapse=""))
overall <- overall + code_deciphered_val
}
digits_sep <- str_split(input, pattern = " ")
overall <- 0
for(i in 1:length(digits_sep)){
code <- digits_sep[[i]][12:15]
shapes <- digits_sep[[i]][1:10]
shape1 <- str_split(shapes[which(nchar(shapes)==2)],pattern = "")[[1]] #1
shape4 <- str_split(shapes[which(nchar(shapes)==4)],pattern = "")[[1]] #4
shape7 <- str_split(shapes[which(nchar(shapes)==3)],pattern = "")[[1]] #7
shape8 <- str_split(shapes[which(nchar(shapes)==7)],pattern = "")[[1]] #8
shape069 <- shapes[which(nchar(shapes)==6)] #0,6,9
shape235 <- shapes[which(nchar(shapes)==5)] #2,3,5
for(j in 1:length(shape069)){
shape_ <- str_split(shape069[j],pattern = "")[[1]]
a <- shape1[! shape1 %in% shape_]
b <- shape1[! shape4 %in% shape_]
if(length(a)==0 & length(b)==0){
shape9 <- str_split(shape069[j],pattern = "")[[1]]
}else if(length(a)!=0 & length(b)!=0){
shape6 <- str_split(shape069[j],pattern = "")[[1]]
}else{
shape0 <- str_split(shape069[j],pattern = "")[[1]]
}
}
top_right_char <- shape1[! shape1 %in% shape6]
for(j in 1:length(shape235)){
shape_ <- str_split(shape235[j],pattern = "")[[1]]
a <- length(shape1[! shape1 %in% shape_])==0
b <- top_right_char %in% shape_
if(a){
shape3 <- str_split(shape235[j],pattern = "")[[1]]
}else if(b){
shape2 <- str_split(shape235[j],pattern = "")[[1]]
}else{
shape5 <- str_split(shape235[j],pattern = "")[[1]]
}
}
shapes_list <- list(shape0,shape1,shape2,shape3,shape4,shape5,shape6,shape7,shape8,shape9)
code_deciphered <- vector()
for(k in 1:length(code)){
code_ <- str_split(code[k],pattern = "")[[1]]
for(p in 1:length(shapes_list)){
if(setequal(code_,shapes_list[[p]])){
code_deciphered <- append(code_deciphered,(p-1))
}
}
}
code_deciphered_val <- as.numeric(paste0(code_deciphered,collapse=""))
overall <- overall + code_deciphered_val
}
i <- 1
code <- digits_sep[[i]][12:15]
shapes <- digits_sep[[i]][1:10]
shape1 <- str_split(shapes[which(nchar(shapes)==2)],pattern = "")[[1]] #1
shape4 <- str_split(shapes[which(nchar(shapes)==4)],pattern = "")[[1]] #4
shape7 <- str_split(shapes[which(nchar(shapes)==3)],pattern = "")[[1]] #7
shape8 <- str_split(shapes[which(nchar(shapes)==7)],pattern = "")[[1]] #8
shape069 <- shapes[which(nchar(shapes)==6)] #0,6,9
shape235 <- shapes[which(nchar(shapes)==5)] #2,3,5
j <- 1
shape_ <- str_split(shape069[j],pattern = "")[[1]]
a <- shape1[! shape1 %in% shape_]
b <- shape1[! shape4 %in% shape_]
if(length(a)==0 & length(b)==0){
shape9 <- str_split(shape069[j],pattern = "")[[1]]
}else if(length(a)!=0 & length(b)!=0){
shape6 <- str_split(shape069[j],pattern = "")[[1]]
}else{
shape0 <- str_split(shape069[j],pattern = "")[[1]]
}
top_right_char <- shape1[! shape1 %in% shape6]
shape_ <- str_split(shape235[j],pattern = "")[[1]]
a <- length(shape1[! shape1 %in% shape_])==0
b <- top_right_char %in% shape_
if(a){
shape3 <- str_split(shape235[j],pattern = "")[[1]]
}else if(b){
shape2 <- str_split(shape235[j],pattern = "")[[1]]
}else{
shape5 <- str_split(shape235[j],pattern = "")[[1]]
}
shapes_list <- list(shape0,shape1,shape2,shape3,shape4,shape5,shape6,shape7,shape8,shape9)
code_deciphered <- vector()
for(k in 1:length(code)){
code_ <- str_split(code[k],pattern = "")[[1]]
for(p in 1:length(shapes_list)){
if(setequal(code_,shapes_list[[p]])){
code_deciphered <- append(code_deciphered,(p-1))
}
}
}
code_deciphered_val <- as.numeric(paste0(code_deciphered,collapse=""))
overall <- overall + code_deciphered_val
for(i in 1:length(digits_sep)){
code <- digits_sep[[i]][12:15]
shapes <- digits_sep[[i]][1:10]
shape1 <- str_split(shapes[which(nchar(shapes)==2)],pattern = "")[[1]] #1
shape4 <- str_split(shapes[which(nchar(shapes)==4)],pattern = "")[[1]] #4
shape7 <- str_split(shapes[which(nchar(shapes)==3)],pattern = "")[[1]] #7
shape8 <- str_split(shapes[which(nchar(shapes)==7)],pattern = "")[[1]] #8
shape069 <- shapes[which(nchar(shapes)==6)] #0,6,9
shape235 <- shapes[which(nchar(shapes)==5)] #2,3,5
j <- 1
for(j in 1:length(shape069)){
shape_ <- str_split(shape069[j],pattern = "")[[1]]
a <- shape1[! shape1 %in% shape_]
b <- shape1[! shape4 %in% shape_]
if(length(a)==0 & length(b)==0){
shape9 <- str_split(shape069[j],pattern = "")[[1]]
}else if(length(a)!=0 & length(b)!=0){
shape6 <- str_split(shape069[j],pattern = "")[[1]]
}else{
shape0 <- str_split(shape069[j],pattern = "")[[1]]
}
}
top_right_char <- shape1[! shape1 %in% shape6]
for(j in 1:length(shape235)){
shape_ <- str_split(shape235[j],pattern = "")[[1]]
a <- length(shape1[! shape1 %in% shape_])==0
b <- top_right_char %in% shape_
if(a){
shape3 <- str_split(shape235[j],pattern = "")[[1]]
}else if(b){
shape2 <- str_split(shape235[j],pattern = "")[[1]]
}else{
shape5 <- str_split(shape235[j],pattern = "")[[1]]
}
}
shapes_list <- list(shape0,shape1,shape2,shape3,shape4,shape5,shape6,shape7,shape8,shape9)
code_deciphered <- vector()
for(k in 1:length(code)){
code_ <- str_split(code[k],pattern = "")[[1]]
for(p in 1:length(shapes_list)){
if(setequal(code_,shapes_list[[p]])){
code_deciphered <- append(code_deciphered,(p-1))
}
}
}
code_deciphered_val <- as.numeric(paste0(code_deciphered,collapse=""))
overall <- overall + code_deciphered_val
}
digits_sep <- str_split(input, pattern = " ")
overall <- 0
for(i in 1:length(digits_sep)){
code <- digits_sep[[i]][12:15]
shapes <- digits_sep[[i]][1:10]
shape1 <- str_split(shapes[which(nchar(shapes)==2)],pattern = "")[[1]] #1
shape4 <- str_split(shapes[which(nchar(shapes)==4)],pattern = "")[[1]] #4
shape7 <- str_split(shapes[which(nchar(shapes)==3)],pattern = "")[[1]] #7
shape8 <- str_split(shapes[which(nchar(shapes)==7)],pattern = "")[[1]] #8
shape069 <- shapes[which(nchar(shapes)==6)] #0,6,9
shape235 <- shapes[which(nchar(shapes)==5)] #2,3,5
for(j in 1:length(shape069)){
shape_ <- str_split(shape069[j],pattern = "")[[1]]
a <- shape1[! shape1 %in% shape_]
b <- shape1[! shape4 %in% shape_]
if(length(a)==0 & length(b)==0){
shape9 <- str_split(shape069[j],pattern = "")[[1]]
}else if(length(a)!=0 & length(b)!=0){
shape6 <- str_split(shape069[j],pattern = "")[[1]]
}else{
shape0 <- str_split(shape069[j],pattern = "")[[1]]
}
}
top_right_char <- shape1[! shape1 %in% shape6]
for(j in 1:length(shape235)){
shape_ <- str_split(shape235[j],pattern = "")[[1]]
a <- length(shape1[! shape1 %in% shape_])==0
b <- top_right_char %in% shape_
if(a){
shape3 <- str_split(shape235[j],pattern = "")[[1]]
}else if(b){
shape2 <- str_split(shape235[j],pattern = "")[[1]]
}else{
shape5 <- str_split(shape235[j],pattern = "")[[1]]
}
}
shapes_list <- list(shape0,shape1,shape2,shape3,shape4,shape5,shape6,shape7,shape8,shape9)
code_deciphered <- vector()
for(k in 1:length(code)){
code_ <- str_split(code[k],pattern = "")[[1]]
for(p in 1:length(shapes_list)){
if(setequal(code_,shapes_list[[p]])){
code_deciphered <- append(code_deciphered,(p-1))
}
}
}
code_deciphered_val <- as.numeric(paste0(code_deciphered,collapse=""))
overall <- overall + code_deciphered_val
}
digits_sep <- str_split(input, pattern = " ")
count <- 0
for (i in 1:length(digits_sep)) {
temp <- digits_sep[[i]][12:15]
count <- count + length(which(nchar(temp)==2 | nchar(temp)==3 |
nchar(temp)==4 | nchar(temp)==7))
}
