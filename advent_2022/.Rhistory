rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: ).*(?=\\n)"),
false_result = str_extract(raw, "(?<=If false: ).*(?=\\n)"))%>%
View()
read_lines("./day_11/input.txt") %>%
str_trim() %>%
paste(collapse = "\n") %>%
str_split("\n\n") %>%
tibble(.[[1]]) %>%
select(2) %>%
rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: ).*(?=\\n)"),
false_result = str_extract(raw, "(?<=If false: ).*"))%>%
View()
read_lines("./day_11/input.txt") %>%
str_trim() %>%
paste(collapse = "\n") %>%
str_split("\n\n") %>%
tibble(.[[1]]) %>%
select(2) %>%
rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: )[0-9]*(?=\\n)"),
false_result = str_extract(raw, "(?<=If false: )[0-9]*")) %>%
View()
read_lines("./day_11/input.txt") %>%
str_trim() %>%
paste(collapse = "\n") %>%
str_split("\n\n") %>%
tibble(.[[1]]) %>%
select(2) %>%
rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: ).*(?=\\n)"),
false_result = str_extract(raw, "(?<=If false: ).*")) %>%
View()
read_lines("./day_11/input.txt") %>%
str_trim() %>%
paste(collapse = "\n") %>%
str_split("\n\n") %>%
tibble(.[[1]]) %>%
select(2) %>%
rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: ).*(?=\\n)"),
false_result = str_extract(raw, "(?<=If false: ).*")) %>%
str()
read_lines("./day_11/input.txt") %>%
str_trim() %>%
paste(collapse = "\n") %>%
str_split("\n\n") %>%
tibble(.[[1]]) %>%
select(2) %>%
rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: ).*(?=\\n)"),
false_result = str_extract(raw, "(?<=If false: ).*")) %>%
select(-raw) -> parsed_input
parsed_input %>%
mutate(true_monkey = str_extract(true_statement, "[0-9]+"))
read_lines("./day_11/input.txt") %>%
str_trim() %>%
paste(collapse = "\n") %>%
str_split("\n\n") %>%
tibble(.[[1]]) %>%
select(2) %>%
rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: ).*(?=\\n)"),
false_statement = str_extract(raw, "(?<=If false: ).*")) %>%
select(-raw) -> parsed_input
parsed_input %>%
mutate(true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(-contains(any_of("true", "false")))
parsed_input %>%
mutate(true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(-any_of("true", "false"))
parsed_input %>%
mutate(true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(-contains(any_of("true", "false")))
rlang::last_error()
parsed_input %>%
mutate(true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(!contains(any_of("true", "false")))
parsed_input %>%
mutate(true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(!contains("true", "false"))
parsed_input %>%
mutate(true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(!contains(c("true", "false")))
parsed_input %>%
mutate(true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(!true_statement, false_statement)
parsed_input %>%
mutate(true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(!c(true_statement, false_statement))
parsed_input %>%
mutate(true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(!c(true_statement, false_statement)) -> prepped_input
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+"))) %>%
select(!c(true_statement, false_statement)) -> prepped_input
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
print(k)
}
}
}
str(k)
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
str(k)
}
}
}
old = 2
eval("new = old + 2")
parse("new = old + 2")
eval(parse(text = "new = old + 2"))
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test_statement = str_replace(test_statement, "divisible by ", "worry / ")) %>%
select(!c(true_statement, false_statement)) -> prepped_input
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- old / 3
print(worry)
}
}
}
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
print(worry)
}
}
}
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = test_statement))
}
}
}
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test = str_replace(test_statement, "divisible by ", "worry / ")) %>%
select(!contains("statement")) -> prepped_input
read_lines("./day_11/input.txt") %>%
str_trim() %>%
paste(collapse = "\n") %>%
str_split("\n\n") %>%
tibble(.[[1]]) %>%
select(2) %>%
rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: ).*(?=\\n)"),
false_statement = str_extract(raw, "(?<=If false: ).*")) %>%
select(-raw) -> parsed_input
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test = str_replace(test_statement, "divisible by ", "worry / ")) %>%
select(!contains("statement")) -> prepped_input
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test))
}
}
}
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[j]))
print(worry)
}
}
}
View(prepped_input)
worry %/% 12
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test = str_replace(test_statement, "divisible by ", "worry %% ")) %>%
select(!contains("statement")) -> prepped_input
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[j]))
print(worry)
}
}
}
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[j]))
worry == 0
}
}
}
40 %% 40
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[j]))
if (worry == 0) {
print(TRUE)
}
}
}
}
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test = str_replace(test_statement, "divisible by ", "test = worry %% ")) %>%
select(!contains("statement")) -> prepped_input
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[j]))
test == 0
}
}
}
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test = str_replace(test_statement, "divisible by ", "test = worry %% ")) %>%
select(!contains("statement")) -> prepped_input
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[j]))
if (test == 0) {
print(TRUE)
}
}
}
}
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[j]) {
print(k[1])
# old <- as.numeric(k)
#
# eval(parse(text = "new = old + 2"))
#
# worry <- floor(old / 3)
#
# eval(parse(text = prepped_input$test[j]))
}
}
}
print(prepped_input$items[j])
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in 1:length(prepped_input$items[j])) {
old <- as.numeric(prepped_input$items[j][k])
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[j]))
}
}
}
prepped_input$items[i]
prepped_input$items[[i]]
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[[j]]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[j]))
}
}
}
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[[j]]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[[j]]))
print(test)
}
}
}
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[[j]]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[[j]]))
test == 0
}
}
}
prepped_input$true_monkey[[j]]
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[[j]]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[[j]]))
if (test == 0) {
target_monkey <- prepped_input$true_monkey[[j]] + 1 #convert to row number
prepped_input$items[target_monkey] <- append(prepped_input$items[target_monkey], worry)
} else {
target_monkey <- prepped_input$false_monkey[[j]] + 1 #convert to row number
prepped_input$items[target_monkey] <- append(prepped_input$items[target_monkey], worry)
}
}
}
}
warnings()
prepped_input$items[target_monkey]
prepped_input$items[[target_monkey]]
read_lines("./day_11/input.txt") %>%
str_trim() %>%
paste(collapse = "\n") %>%
str_split("\n\n") %>%
tibble(.[[1]]) %>%
select(2) %>%
rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: ).*(?=\\n)"),
false_statement = str_extract(raw, "(?<=If false: ).*")) %>%
select(-raw) -> parsed_input
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test = str_replace(test_statement, "divisible by ", "test = worry %% ")) %>%
select(!contains("statement")) -> prepped_input
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[[j]]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[[j]]))
if (test == 0) {
target_monkey <- prepped_input$true_monkey[[j]] + 1 #convert to row number
prepped_input$items[[target_monkey]] <- append(prepped_input$items[[target_monkey]], worry)
} else {
target_monkey <- prepped_input$false_monkey[[j]] + 1 #convert to row number
prepped_input$items[[target_monkey]] <- append(prepped_input$items[[target_monkey]], worry)
}
}
}
}
View(prepped_input)
head(prepped_input$items[[j]])
head(prepped_input$items[[j]], -1)
prepped_input$items[[j]]
set.seed(8675309)
read_lines("./day_11/input.txt") %>%
str_trim() %>%
paste(collapse = "\n") %>%
str_split("\n\n") %>%
tibble(.[[1]]) %>%
select(2) %>%
rename("raw" = 1) %>%
mutate(monkey_num = str_extract(raw, "(?<=Monkey )[0-9]+"),
items = str_extract(raw, "(?<=items: ).*(?=\\n)") %>% str_split(", "),
operation = str_extract(raw, "(?<=Operation: ).*(?=\\n)"),
test_statement = str_extract(raw, "(?<=Test: ).*(?=\\n)"),
true_statement = str_extract(raw, "(?<=If true: ).*(?=\\n)"),
false_statement = str_extract(raw, "(?<=If false: ).*")) %>%
select(-raw) -> parsed_input
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test = str_replace(test_statement, "divisible by ", "test = worry %% ")) %>%
select(!contains("statement")) -> prepped_input
for (i in 1) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[[j]]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[[j]]))
if (test == 0) {
target_monkey <- prepped_input$true_monkey[[j]] + 1 #convert to row number
prepped_input$items[[target_monkey]] <- append(prepped_input$items[[target_monkey]], worry)
prepped_input$items[[j]] <- head(prepped_input$items[[j]], -1)
} else {
target_monkey <- prepped_input$false_monkey[[j]] + 1 #convert to row number
prepped_input$items[[target_monkey]] <- append(prepped_input$items[[target_monkey]], worry)
prepped_input$items[[j]] <- head(prepped_input$items[[j]], -1)
}
}
}
}
View(prepped_input)
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test = str_replace(test_statement, "divisible by ", "test = worry %% ")) %>%
select(!contains("statement")) -> prepped_input
for (i in 1:20) {
for (j in 1:nrow(prepped_input)) {
for (k in prepped_input$items[[j]]) {
old <- as.numeric(k)
eval(parse(text = "new = old + 2"))
worry <- floor(old / 3)
eval(parse(text = prepped_input$test[[j]]))
if (test == 0) {
target_monkey <- prepped_input$true_monkey[[j]] + 1 #convert to row number
prepped_input$items[[target_monkey]] <- append(prepped_input$items[[target_monkey]], worry)
prepped_input$items[[j]] <- head(prepped_input$items[[j]], -1)
} else {
target_monkey <- prepped_input$false_monkey[[j]] + 1 #convert to row number
prepped_input$items[[target_monkey]] <- append(prepped_input$items[[target_monkey]], worry)
prepped_input$items[[j]] <- head(prepped_input$items[[j]], -1)
}
}
}
}
View(prepped_input)
parsed_input %>%
mutate(monkey_num = as.numeric(monkey_num),
true_monkey = as.numeric(str_extract(true_statement, "[0-9]+")),
false_monkey = as.numeric(str_extract(false_statement, "[0-9]+")),
test = str_replace(test_statement, "divisible by ", "test = worry %% ")) %>%
select(!contains("statement")) -> prepped_input
