win_key <- c("scissors" = "rock", "rock" = "paper", "paper" = "scissors")
lose_key <- c("paper" = "rock", "scissors" = "paper", "rock" = "scissors")
input %>%
tibble() %>%
separate(1, c("opponent", "result"), sep = " ") %>%
mutate(opponent = opp_key[opponent],
result = res_key[result]) %>%
mutate(self = case_when(
result == "win" ~ win_key[opponent],
result == "lose" ~ lose_key[opponent],
T ~ opponent
)) %>%
mutate(shape_score = case_when(
self == "rock" ~ 1,
self == "paper" ~ 2,
self == "scissors" ~ 3
)) %>%
mutate(final_score = case_when(
result == "win" ~ 6 + shape_score,
result == "draw" ~ 3 + shape_score,
result == "lose" ~ 0 + shape_score
)) -> final_tbl_2
final_tbl_2 %>%
pull(final_score) %>%
sum()
final_tbl %>%
pull(final_score) %>%
sum() -> part_1_ans
final_tbl_2 %>%
pull(final_score) %>%
sum() -> part_2_ans
if (!require("pacman")) install.packages("pacman")
pacman::p_load("tidyverse")
set.seed(8675309)
input <- read_lines("./day_03/input.txt")
input %>%
map(~ str_length(.x))
lengths <- map_dbl(input, ~ str_length(.x)/2)
map_chr(input, ~ .x[1:lengths])
comp1 <- c()
comp2 <- c()
comp1 <- append(comp1, input[1:lengths[1]])
rm(list = ls())
pacman::p_load("tidyverse")
set.seed(8675309)
input <- read_lines("./day_03/input.txt")
lengths <- map_dbl(input, ~ str_length(.x)/2)
map2_chr(input, lengths, str_sub(.x, 1, .y))
map2_chr(input, lengths, ~ str_sub(.x, 1, .y))
comp2 <- map2_chr(input, lengths, ~ str_sub(.x, .y+1, -1))
comp1 <- map2_chr(input, lengths, ~ str_sub(.x, 1, .y))
comp2 <- map2_chr(input, lengths, ~ str_sub(.x, .y+1, -1))
unlist(strsplit(comp1, split = ""))
unlist(strsplit(comp1[1], split = ""))
map2_chr(comp1, comp2, ~ intersect(
unlist(strsplit(.x, split = "")),
unlist(strsplit(.y, split = ""))
))
matches <- map2_chr(comp1, comp2, ~ intersect(
unlist(strsplit(.x, split = "")),
unlist(strsplit(.y, split = ""))
))
letters
priorities <- c(1:52)
names(priorities) <- c(letters, LETTERS)
matches %>%
tibble() %>%
mutate(scores = priorities[matches]) %>%
View()
matches %>%
tibble() %>%
mutate(scores = priorities[matches]) %>%
pull(2) %>%
sum()
input %>%
tibble() %>%
mutate(group = rep(1:100, each = 3))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = rep(1:100, each = 3))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = rep(1:length(items), each = 3)) %>% View()
10 %% 4
10 %% 3
10 %/% 3
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = row_number() %/% 3) %>% View()
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = row_number()+2 %/% 3) %>% View()
1:5 // 3
1:5 / 3
1:5 %/% 3
1:5+2
(1:5+2) %/% 3
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>% View()
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) -> elf_group
max(elf_group$group)
elf_group$group == 1
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>%
pivot_wider(names_from = group, values_from = items)
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>%
pivot_longer(names_to = group,
values_to = c("elf1", "elf2", "elf3"))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>%
pivot_longer(group,
names_to = group,
values_to = c("elf1", "elf2", "elf3"))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>%
pivot_longer(group,
values_to = c("elf1", "elf2", "elf3"))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>%
pivot_longer(group,
values_to = "elf")
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>%
pivot_longer(items,
values_to = "elf")
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>%
pivot_longer(items, group,
values_to = "elf")
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>%
pivot_wider(names_expand = T)
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3) %>%
pivot_wider(id_cols = group)
1:5 %/% 3
1:5 %% 3
1:5 %% 4
1:10+1 %% 3
1:9 / 1:9
1:9 %% 3
1:9 - (1:9 %% 3)
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, 100))) %>% View()
1:9 %/% 3
1:9-1 %/% 3
(1:9)-1 %/% 3
((1:9)-1) %/% 3
(((1:9)-1) %/% 3) * 3
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, ((row_number()-1)%/% 3)*3))) %>% View()
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, ((row_number()-1) %/% 3)*3)))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, (((row_number()-1) %/% 3)*3))))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3)))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(.))))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group))))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3)))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group)
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items)
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items) %>% View()
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items) %>%
map2(elf1, elf2, elf3,
~reduce(list(..1, ..2, ..3), ~ intersect))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items) %>% View()
unlist(strsplit(..2, split = "")),
map2(elf1, elf2, elf3,
~ Reduce(intersect, list(
unlist(strsplit(..1, split = "")),
unlist(strsplit(..2, split = "")),
unlist(strsplit(..3, split = ""))
)))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items) %>%
map2(elf1, elf2, elf3,
~ Reduce(intersect, list(
unlist(strsplit(..1, split = "")),
unlist(strsplit(..2, split = "")),
unlist(strsplit(..3, split = ""))
)))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items) -> elf_wide
map2(elf_wide$elf1, elf_wide$elf2, elf_wide$elf3,
~ Reduce(intersect, list(
unlist(strsplit(..1, split = "")),
unlist(strsplit(..2, split = "")),
unlist(strsplit(..3, split = ""))
)))
Reduce(intersect, list(
unlist(strsplit(elf_wide$elf1, split = "")),
unlist(strsplit(elf_wide$elf2, split = "")),
unlist(strsplit(elf_wide$elf3, split = ""))
))
Reduce(intersect, list(
unlist(strsplit(elf_wide$elf1, split = "")),
unlist(strsplit(elf_wide$elf2, split = "")),
unlist(strsplit(elf_wide$elf3, split = ""))
))
Reduce(intersect, list(
unlist(strsplit(elf_wide$elf1, split = "")),
unlist(strsplit(elf_wide$elf2, split = "")),
unlist(strsplit(elf_wide$elf3, split = ""))
)) %>%
tibble() %>%
mutate(scores = priorities[matches]) %>%
pull(2) %>%
sum()
Reduce(intersect, list(
unlist(strsplit(elf_wide$elf1, split = "")),
unlist(strsplit(elf_wide$elf2, split = "")),
unlist(strsplit(elf_wide$elf3, split = ""))
)) %>%
tibble() %>%
rename("matches" = 1) %>%
mutate(scores = priorities[matches]) %>%
pull(2) %>%
sum()
Reduce(intersect, list(
unlist(strsplit(elf_wide$elf1, split = "")),
unlist(strsplit(elf_wide$elf2, split = "")),
unlist(strsplit(elf_wide$elf3, split = ""))
))
elf_wide %>%
mutate(common_1_2 = map2_chr(elf1, elf2, ~ intersect(
unlist(strsplit(.x, split = "")),
unlist(strsplit(.y, split = ""))
)))
elf_wide %>%
mutate(common = map2_chr(elf1, elf2, elf3, ~ intersect(
unlist(strsplit(..1, split = "")),
unlist(strsplit(..2, split = "")),
unlist(strsplit(..3, split = ""))
)))
elf_wide %>%
mutate(common = map2_chr(elf1, elf2, elf3, ~ intersect(
intersect(unlist(strsplit(..1, split = "")),
unlist(strsplit(..2, split = ""))),
unlist(strsplit(..3, split = ""))
)))
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items) -> elf_wide
common_list <- c()
for (i in nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common <- intersect(intersect(list1, list2), list3)
common_list <- append(common_list, common)
}
common_list <- c()
for (i in nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common <- intersect(intersect(list1, list2), list3)
common_list <- append(common_list, common)
}
common_list <- c()
for (i in length(elf_wide$elf1)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common <- intersect(intersect(list1, list2), list3)
common_list <- append(common_list, common)
}
View(elf_wide)
head(input)
list1 %in% list2
list1 %in% list2 %in% list3
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>% View()
input <- read_lines("./day_03/input.txt")
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items) -> elf_wide
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items) -> elf_wide
common_list <- c()
for (i in nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common <- intersect(intersect(list1, list2), list3)
common_list <- append(common_list, common)
}
list1[list1 %in% list2 %in% list3]
i = 1
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
list1[list1 %in% list2 %in% list3]
table(list1, list2, list3)
list1 %in% list2
list1 %in% list2 %in% list3
intersect(list1, list3)
intersect(list1, list2)
Reduce(intersect, list(list1, list2, list3))
common_list <- c()
for (i in nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- append(common_list, common_letter)
}
common_list <- list()
for (i in nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- append(common_list, common_letter)
}
i = 1
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- list()
common_list <- append(common_list, common_letter)
i = 2
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- append(common_list, common_letter)
i = 3
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- append(common_list, common_letter)
common_list <- list()
for (i in nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- append(common_list, common_letter)
}
common_list <- list()
for (i in nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
append(common_list, common_letter)
}
common_list <- append(common_list, common_letter)
common_list <- list()
for (i in nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- append(common_list, common_letter)
}
input %>%
tibble() %>%
rename("items" = 1) %>%
mutate(group = (row_number()+2) %/% 3,
elf_group = paste0("elf", rep(1:3, length(group)/3))) %>%
pivot_wider(id_cols = group,
names_from = elf_group,
values_from = items) -> elf_wide
common_list <- list()
for (i in 1:100) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- append(common_list, common_letter)
}
nrow(elf_wide)
common_list <- list()
for (i in 1:nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- append(common_list, common_letter)
}
priorities[common_list]
common_list <- c()
for (i in 1:nrow(elf_wide)) {
list1 <- unlist(strsplit(elf_wide$elf1[i], split = ""))
list2 <- unlist(strsplit(elf_wide$elf2[i], split = ""))
list3 <- unlist(strsplit(elf_wide$elf3[i], split = ""))
common_letter <- Reduce(intersect, list(list1, list2, list3))
common_list <- append(common_list, common_letter)
}
priorities[common_list]
(priorities[common_list])
sum(priorities[common_list])
