tournament_home %>%
bind_rows(tournament_away) -> tournament_overall
levels(train_set$conference) <- c(levels(train_set$conference), "unknown")
tournament_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> clean_tournament
return(clean_tournament)
}
clean_tournament <- results(1)
clean_tournament %>%
View()
levels(train_set$conference)[-1]
levels(train_set$conference)
results <- function(round = 1) {
nodes <- paste0('.round-',round," .name")
round_1_teams <- read_html(current_url) %>% html_nodes(nodes) %>% html_text()
round_1_teams <- str_replace_all(pattern = "St.$", replacement = "State", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = " (FL)", replacement = "", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Ky.", replacement = "Kentucky", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "FGCU", replacement = "Florida Gulf Coast", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Colo\\.", replacement = "Colorado", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "ii", replacement = "i'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Mo.", replacement = "Missouri", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Texas A&M", replacement = "Texas A&M–CC", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "LMU \\(CA\\)", replacement = "Loyola Marymount", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Hawaiʻi", replacement = "Hawai'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Southeastern La\\.", replacement = "Southeastern Louisiana", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "NIU", replacement = "Northern Iowa", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "TBA", replacement = "Stephen F. Austin", string = round_1_teams)
tournament <- tibble(game_id = 1:(length(round_1_teams)/2))
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[2]],
opp = split(round_1_teams, 1:2)[[1]]) -> tournament_home
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[1]],
opp = split(round_1_teams, 1:2)[[2]]) -> tournament_away
tournament_home %>%
bind_rows(tournament_away) -> tournament_overall
levels(train_set$conference) <- c(levels(train_set$conference)[-1], "unknown")
tournament_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
replace_na(list(conference = "unknown")) %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> clean_tournament
return(clean_tournament)
}
clean_tournament <- results(1)
clean_tournament %>%
View()
clean_tournament <- results(1)
svm_lin_real <- svm(train_set$win~., data=train_set,
kernel="linear", cost=100,
scale=FALSE)
pred <- predict(svm_lin_real, clean_tournament, type="class")
clean_tournament$win <- pred
pred
View(clean_tournament)
results <- function(round = 1) {
nodes <- paste0('.round-',round," .name")
round_1_teams <- read_html(current_url) %>% html_nodes(nodes) %>% html_text()
round_1_teams <- str_replace_all(pattern = "St.$", replacement = "State", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = " (FL)", replacement = "", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Ky.", replacement = "Kentucky", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "FGCU", replacement = "Florida Gulf Coast", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Colo\\.", replacement = "Colorado", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "ii", replacement = "i'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Mo.", replacement = "Missouri", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Texas A&M", replacement = "Texas A&M–CC", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "LMU \\(CA\\)", replacement = "Loyola Marymount", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Hawaiʻi", replacement = "Hawai'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Southeastern La\\.", replacement = "Southeastern Louisiana", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "NIU", replacement = "Northern Iowa", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "TBA", replacement = "Stephen F. Austin", string = round_1_teams)
tournament <- tibble(game_id = 1:(length(round_1_teams)/2))
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[2]],
opp = split(round_1_teams, 1:2)[[1]]) -> tournament_home
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[1]],
opp = split(round_1_teams, 1:2)[[2]]) -> tournament_away
tournament_home %>%
bind_rows(tournament_away) -> tournament_overall
levels(train_set$conference) <- c(levels(train_set$conference), "unknown")
tournament_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
replace_na(list(conference = "unknown")) %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> clean_tournament
return(clean_tournament)
}
clean_tournament <- results(1)
svm_lin_real <- svm(train_set$win~., data=train_set,
kernel="linear", cost=100,
scale=FALSE)
pred <- predict(svm_lin_real, clean_tournament, type="class")
train_set
results <- function(round = 1) {
nodes <- paste0('.round-',round," .name")
round_1_teams <- read_html(current_url) %>% html_nodes(nodes) %>% html_text()
round_1_teams <- str_replace_all(pattern = "St.$", replacement = "State", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = " (FL)", replacement = "", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Ky.", replacement = "Kentucky", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "FGCU", replacement = "Florida Gulf Coast", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Colo\\.", replacement = "Colorado", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "ii", replacement = "i'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Mo.", replacement = "Missouri", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Texas A&M", replacement = "Texas A&M–CC", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "LMU \\(CA\\)", replacement = "Loyola Marymount", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Hawaiʻi", replacement = "Hawai'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Southeastern La\\.", replacement = "Southeastern Louisiana", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "NIU", replacement = "Northern Iowa", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "TBA", replacement = "Stephen F. Austin", string = round_1_teams)
tournament <- tibble(game_id = 1:(length(round_1_teams)/2))
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[2]],
opp = split(round_1_teams, 1:2)[[1]]) -> tournament_home
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[1]],
opp = split(round_1_teams, 1:2)[[2]]) -> tournament_away
tournament_home %>%
bind_rows(tournament_away) -> tournament_overall
levels(train_set$conference) <- c(levels(train_set$conference), NA)
tournament_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> clean_tournament
return(clean_tournament)
}
clean_tournament <- results(1)
svm_lin_real <- svm(train_set$win~., data=train_set,
kernel="linear", cost=100,
scale=FALSE)
pred <- predict(svm_lin_real, clean_tournament, type="class")
clean_tournament$win <- pred
results <- function(round = 1) {
nodes <- paste0('.round-',round," .name")
round_1_teams <- read_html(current_url) %>% html_nodes(nodes) %>% html_text()
round_1_teams <- str_replace_all(pattern = "St.$", replacement = "State", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = " (FL)", replacement = "", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Ky.", replacement = "Kentucky", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "FGCU", replacement = "Florida Gulf Coast", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Colo\\.", replacement = "Colorado", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "ii", replacement = "i'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Mo.", replacement = "Missouri", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Texas A&M", replacement = "Texas A&M–CC", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "LMU \\(CA\\)", replacement = "Loyola Marymount", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Hawaiʻi", replacement = "Hawai'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Southeastern La\\.", replacement = "Southeastern Louisiana", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "NIU", replacement = "Northern Iowa", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "TBA", replacement = "Stephen F. Austin", string = round_1_teams)
tournament <- tibble(game_id = 1:(length(round_1_teams)/2))
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[2]],
opp = split(round_1_teams, 1:2)[[1]]) -> tournament_home
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[1]],
opp = split(round_1_teams, 1:2)[[2]]) -> tournament_away
tournament_home %>%
bind_rows(tournament_away) -> tournament_overall
tournament_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> clean_tournament
return(clean_tournament)
}
clean_tournament <- results(1)
svm_lin_real <- svm(train_set$win~., data=train_set,
kernel="linear", cost=100,
scale=FALSE)
pred <- predict(svm_lin_real, clean_tournament, type="class")
train_set$conference
unique(train_set$conference)
results <- function(round = 1) {
nodes <- paste0('.round-',round," .name")
round_1_teams <- read_html(current_url) %>% html_nodes(nodes) %>% html_text()
round_1_teams <- str_replace_all(pattern = "St.$", replacement = "State", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = " (FL)", replacement = "", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Ky.", replacement = "Kentucky", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "FGCU", replacement = "Florida Gulf Coast", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Colo\\.", replacement = "Colorado", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "ii", replacement = "i'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Mo.", replacement = "Missouri", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Texas A&M", replacement = "Texas A&M–CC", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "LMU \\(CA\\)", replacement = "Loyola Marymount", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Hawaiʻi", replacement = "Hawai'i", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "Southeastern La\\.", replacement = "Southeastern Louisiana", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "NIU", replacement = "Northern Iowa", string = round_1_teams)
round_1_teams <- str_replace_all(pattern = "TBA", replacement = "Stephen F. Austin", string = round_1_teams)
tournament <- tibble(game_id = 1:(length(round_1_teams)/2))
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[2]],
opp = split(round_1_teams, 1:2)[[1]]) -> tournament_home
tournament %>%
mutate(team = split(round_1_teams, 1:2)[[1]],
opp = split(round_1_teams, 1:2)[[2]]) -> tournament_away
tournament_home %>%
bind_rows(tournament_away) -> tournament_overall
tournament_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
replace_na(list(conference = "Ohio Valley")) %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> clean_tournament
return(clean_tournament)
}
clean_tournament <- results(1)
svm_lin_real <- svm(train_set$win~., data=train_set,
kernel="linear", cost=100,
scale=FALSE)
pred <- predict(svm_lin_real, clean_tournament, type="class")
clean_tournament$win <- pred
clean_tournament <- tibble(clean_tournament)
View(clean_tournament)
clean_tournament %>%
dplyr::slice(1:5, 7:32, 38) %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp
)) %>% dplyr::slice(1:5, 32, 6:31) %>%
select(advance) %>%
as_vector() -> advance
clean_tournament %>%
dplyr::slice(1:5, 7:32, 38) %>% View()
clean_tournament
clean_tournament %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp
)) %>% View()
clean_tournament %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp
)) %>%
dplyr::slice(1:2, 35:40, 9:21, 54, 23:32) %>%
mutate(advance = case_when(
advance == "Loyola Marymount" ~ "Oregon",
T ~ T
)) %>%
select(advance) %>%
as_vector() -> advance
clean_tournament %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp
)) %>%
dplyr::slice(1:2, 35:40, 9:21, 54, 23:32) %>% View()
mutate(advance = as.character(advance),
advance = case_when(
advance == "Loyola Marymount" ~ "Oregon",
T ~ T
)) %>%
select(advance) %>%
as_vector() -> advance
clean_tournament %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp
)) %>%
dplyr::slice(1:2, 35:40, 9:21, 54, 23:32) %>%
mutate(advance = case_when(
advance == "Loyola Marymount" ~ "Oregon",
T ~ T
)) %>%
select(advance) %>%
as_vector() -> advance
clean_tournament %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp
)) %>%
dplyr::slice(1:2, 35:40, 9:21, 54, 23:32) %>%
mutate(advance = as.character(advance),
advance = case_when(
advance == "Loyola Marymount" ~ "Oregon",
T ~ T
)) %>%
select(advance) %>%
as_vector() -> advance
rlang::last_error()
clean_tournament %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp
)) %>%
dplyr::slice(1:2, 35:40, 9:21, 54, 23:32) %>%
select(advance) %>%
as_vector() -> advance
advance
advance[28] <- "Oregon"
advnace
advance
master <- tibble(game_id = 1:(length(advance)/2))
master %>%
mutate(team = split(advance, 1:2)[[2]],
opp = split(advance, 1:2)[[1]]) -> master_home
master %>%
mutate(team = split(advance, 1:2)[[1]],
opp = split(advance, 1:2)[[2]]) -> master_away
master_home %>%
bind_rows(master_away) -> master_overall
master_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
replace(is.na(.), "unkown_conf") %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> round_2
pred <- predict(svm_lin_real, round_2, type="class")
round_2$win <- pred
round_2 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>% View()
round_2 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>%
select(advance) %>%
dplyr::slice(1:16) %>%
as_vector() -> advance
master <- tibble(game_id = 1:(length(advance)/2))
master %>%
mutate(team = split(advance, 1:2)[[2]],
opp = split(advance, 1:2)[[1]]) -> master_home
master %>%
mutate(team = split(advance, 1:2)[[1]],
opp = split(advance, 1:2)[[2]]) -> master_away
master_home %>%
bind_rows(master_away) -> master_overall
master_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
replace(is.na(.), "unkown_conf") %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> round_3
pred <- predict(svm_lin_real, round_3, type="class")
round_3$win <- pred
round_3 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>%
select(advance) %>%
dplyr::slice(1:8) %>%
as_vector() -> advance
round_3 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>% View()
round_2 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>%
select(advance) %>%
dplyr::slice(1:16) %>%
as_vector() -> advance
advance
advance[8]
advance[8] <- "Pittsburgh"
master <- tibble(game_id = 1:(length(advance)/2))
master %>%
mutate(team = split(advance, 1:2)[[2]],
opp = split(advance, 1:2)[[1]]) -> master_home
master %>%
mutate(team = split(advance, 1:2)[[1]],
opp = split(advance, 1:2)[[2]]) -> master_away
master_home %>%
bind_rows(master_away) -> master_overall
master_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
replace(is.na(.), "unkown_conf") %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> round_3
pred <- predict(svm_lin_real, round_3, type="class")
round_3$win <- pred
round_3 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>% View()
round_3 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>% View()
round_3 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>%
select(advance) %>%
dplyr::slice(1:3, 12, 5:8) %>%
as_vector() -> advance
advance
master <- tibble(game_id = 1:(length(advance)/2))
master %>%
mutate(team = split(advance, 1:2)[[2]],
opp = split(advance, 1:2)[[1]]) -> master_home
master %>%
mutate(team = split(advance, 1:2)[[1]],
opp = split(advance, 1:2)[[2]]) -> master_away
master_home %>%
bind_rows(master_away) -> master_overall
master_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
replace(is.na(.), "unkown_conf") %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> round_4
pred <- predict(svm_lin_real, round_4, type="class")
round_4$win <- pred
round_4 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>% View()
round_4 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>% View()
round_4 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>%
select(advance) %>%
dplyr::slice(1:4) %>%
as_vector() -> advance
master <- tibble(game_id = 1:(length(advance)/2))
key <- levels(advance)[advance]
master %>%
mutate(team = c(key[1], key[2]),
opp = c(key[3], key[4])) -> master_home
master %>%
mutate(team = c(key[3], key[4]),
opp = c(key[1], key[2])) -> master_away
master_home %>%
bind_rows(master_away) -> master_overall
master_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
replace(is.na(.), "unkown_conf") %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> round_5
pred <- predict(svm_lin_real, round_5, type="class")
round_5$win <- pred
View(round_5)
View(round_5)
round_5 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>% View()
round_5 %>%
mutate(advance = case_when(
win == 1 ~ team,
win == 0 ~ opp)) %>%
select(advance) %>%
dplyr::slice(3:4) %>%
as_vector() -> advance
master <- tibble(game_id = 1:(length(advance)/2))
key <- levels(advance)[advance]
master %>%
mutate(team = c(key[1]),
opp = c(key[2])) -> master_home
master %>%
mutate(team = c(key[2]),
opp = c(key[1])) -> master_away
master_home %>%
bind_rows(master_away) -> master_overall
master_overall %>%
left_join(bracket, by = c("team" = "School")) %>%
clean_names() %>%
select(-game_id, -seed, -rpi, -berth_type, -record, -region) %>%
replace(is.na(.), "unkown_conf") %>%
mutate(team = factor(team, levels = levels(train_set$team)),
opp = factor(opp, levels = levels(train_set$opp)),
conference = factor(conference, levels = levels(train_set$conference))) -> round_6
pred <- predict(svm_lin_real, round_6, type="class")
round_6$win <- pred
View(round_6)
pacman::p_load("tidyverse", "rvest", "rpart",
"rattle", "rpart.plot", "RColorBrewer",
"Cairo", "CORElearn", "magrittr",
"forcats", "dplyr", "stringr",
"e1071", "mlr", "caret",
"naivebayes", "janitor", "neuralnet",
"xgboost", "nnet", "scales",
"knn", "DiagrammeR", "gt",
"webshot2")
