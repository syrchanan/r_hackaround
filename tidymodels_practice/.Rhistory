#step_mutate_at(cabin, fn = ~ str_extract(., "[a-zA-Z]*")) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) %>%
prep(retain = T) %>%
juice()
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
#step_mutate_at(cabin, fn = ~ str_extract(., "[a-zA-Z]*")) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) %>%
#step_cut(age, breaks = seq(0, 80, by = 10)) %>%
step_discretize(fare, num_breaks = 5) %>%
step_mutate_at(all_double_predictors(), fn = ~ factor(., ordered = F)) %>%
prep(retain = T) %>%
juice()
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
#step_mutate_at(cabin, fn = ~ str_extract(., "[a-zA-Z]*")) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) %>%
#step_cut(age, breaks = seq(0, 80, by = 10)) %>%
step_discretize(fare, num_breaks = 5) %>%
step_mutate_at(all_double(), fn = ~ factor(., ordered = F)) %>%
prep(retain = T) %>%
juice()
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) %>%
step_discretize(fare, num_breaks = 5) %>%
step_mutate_at(all_double(), fn = ~ factor(., ordered = F)) %>%
prep(retain = T) %>%
juice()
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) %>%
step_discretize(fare, num_breaks = 5) %>%
step_mutate_at(all_double(), fn = ~ factor(., ordered = F)) -> titanic_rec
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) %>%
step_mutate_at(all_outcomes(), fn = ~ factor(., ordered = F)) -> titanic_rec
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
predict(fit_wflw, test_set) %>%
pull(1) %>%
map_dbl(~ round(.x, 0)) %>%
bind_cols(test_set$passenger_id) %>%
select(2,1) %>%
rename("Survived" = 2, "PassengerId" = 1) %>%
write_csv("./titanic/predictions.csv")
predict(fit_wflw, test_set) %>% View()
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) %>%
step_mutate_at(all_outcomes(), fn = ~ factor(., ordered = F)) %>%
prep(retain = T) %>%
juice()
predict(fit_wflw, test_set)
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) %>%
step_mutate_at(all_outcomes(), fn = ~ factor(., ordered = F)) -> titanic_rec
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
fit_wflw
predict(fit_wflw, test_set) %>%
pull(1) %>%
map_dbl(~ round(.x, 0)) %>%
bind_cols(test_set$passenger_id) %>%
select(2,1) %>%
rename("Survived" = 2, "PassengerId" = 1) %>%
write_csv("./titanic/predictions.csv")
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) -> titanic_rec
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
predict(fit_wflw, test_set) %>%
pull(1) %>%
map_dbl(~ round(.x, 0)) %>%
bind_cols(test_set$passenger_id) %>%
select(2,1) %>%
rename("Survived" = 2, "PassengerId" = 1) %>%
write_csv("./titanic/predictions.csv")
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) %>%
step_mutate_at(all_outcomes(), fn = ~ factor(., ordered = F)) -> titanic_rec
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
predict(fit_wflw, test_set) %>%
pull(1) %>%
map_dbl(~ round(.x, 0)) %>%
bind_cols(test_set$passenger_id) %>%
select(2,1) %>%
rename("Survived" = 2, "PassengerId" = 1) %>%
write_csv("./titanic/predictions.csv")
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors())  -> titanic_rec
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) -> titanic_rec
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) -> titanic_rec
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("regression") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
predict(fit_wflw, test_set) %>%
pull(1) %>%
map_dbl(~ round(.x, 0)) %>%
bind_cols(test_set$passenger_id) %>%
select(2,1) %>%
rename("Survived" = 2, "PassengerId" = 1) %>%
write_csv("./titanic/predictions.csv")
train_set$survived <- factor(train_set$survived)
train_set
train_set$survived <- factor(train_set$survived)
recipe(survived ~ ., train_set) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) -> titanic_rec
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("regression") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
boost_tree() %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
predict(fit_wflw, test_set) %>%
pull(1) %>%
map_dbl(~ round(.x, 0)) %>%
bind_cols(test_set$passenger_id) %>%
select(2,1) %>%
rename("Survived" = 2, "PassengerId" = 1) %>%
write_csv("./titanic/predictions.csv")
predict(fit_wflw, test_set) %>%
pull(1) %>% View()
predict(fit_wflw, test_set) %>%
pull(1) %>% View()
predict(fit_wflw, test_set) %>%
pull(1) %>%
#map_dbl(~ round(.x, 0)) %>%
bind_cols(test_set$passenger_id) %>%
select(2,1) %>%
rename("Survived" = 2, "PassengerId" = 1) %>%
write_csv("./titanic/predictions.csv")
mod_xgb
titanic_wflw
fit_wflw
boost_tree(learn_rate = 0.01, tree_depth = 10,
loss_reduction = 0, trees = 20) %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb #76% accuracy
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = train_set) -> fit_wflw
predict(fit_wflw, test_set) %>%
pull(1) %>%
#map_dbl(~ round(.x, 0)) %>%
bind_cols(test_set$passenger_id) %>%
select(2,1) %>%
rename("Survived" = 2, "PassengerId" = 1) %>%
write_csv("./titanic/predictions.csv")
recipe(survived ~ ., training(train_set)) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) -> titanic_rec
t_learn <- training(train_set)
train_split <- initial_split(train_set, prop = 0.75)
recipe(survived ~ ., training(train_split)) %>%
step_rm(name, ticket, age, cabin, embarked) %>%
step_zv(all_predictors()) %>%
step_dummy(all_factor_predictors()) %>%
step_impute_bag(fare, impute_with = imp_vars(all_predictors())) %>%
step_corr(all_numeric_predictors()) -> titanic_rec
boost_tree(learn_rate = 0.01, tree_depth = 10,
loss_reduction = 0, trees = 20) %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb #73% accuracy
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = training(train_split)) -> fit_wflw
predict(fir_wflw, testing(train_split))
predict(fit_wflw, testing(train_split))
predict(fit_wflw, testing(train_split)) %>%
bind_cols(predict(fit_wflw, testing(train_split), type = "prob")) %>%
bind_cols(training(train_split) %>%
select(survived))
predict(fit_wflw, testing(train_split)) %>%
bind_cols(predict(fit_wflw, testing(train_split), type = "prob")) %>% View()
predict(fit_wflw, testing(train_split)) %>%
bind_cols(predict(fit_wflw, testing(train_split), type = "prob")) %>%
bind_cols(testing(train_split) %>%
select(survived))
predict(fit_wflw, training(train_split)) %>%
bind_cols(predict(fit_wflw, training(train_split), type = "prob")) %>%
bind_cols(testing(train_split) %>%
select(survived)) %>%
accuracy(truth = survived, .pred_class)
predict(fit_wflw, training(train_split)) %>%
bind_cols(predict(fit_wflw, training(train_split), type = "prob")) %>%
bind_cols(training(train_split) %>%
select(survived)) %>%
accuracy(truth = survived, .pred_class)
predict(fit_wflw, testing(train_split)) %>%
bind_cols(predict(fit_wflw, testing(train_split), type = "prob")) %>%
bind_cols(testing(train_split) %>%
select(survived)) %>%
accuracy(truth = survived, .pred_class)
boost_tree(learn_rate = 0.01, tree_depth = 5,
loss_reduction = 0, trees = 20) %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb #73% accuracy
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
titanic_wflw %>%
fit(data = training(train_split)) -> fit_wflw
predict(fit_wflw, training(train_split)) %>%
bind_cols(predict(fit_wflw, training(train_split), type = "prob")) %>%
bind_cols(training(train_split) %>%
select(survived)) %>%
accuracy(truth = survived, .pred_class)
predict(fit_wflw, testing(train_split)) %>%
bind_cols(predict(fit_wflw, testing(train_split), type = "prob")) %>%
bind_cols(testing(train_split) %>%
select(survived)) %>%
accuracy(truth = survived, .pred_class)
boost_tree(learn_rate = tune(), tree_depth = 6,
loss_reduction = 0, trees = 15) %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb #73% accuracy
titanic_wflw %>%
tune_grid(grid_regular(levels = 5))
titanic_wflw %>%
tune_grid(grid_regular(learn_rate(),
trees(),
levels = 5))
vfold_cv(training(train_split))
cfold <- vfold_cv(training(train_split))
titanic_wflw %>%
tune_grid(resamples = cfold,
grid = grid_regular(learn_rate(),
trees(),
levels = 5))
boost_tree(learn_rate = tune(), tree_depth = 6,
loss_reduction = 0, trees = tune()) %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb #73% accuracy
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
cfold <- vfold_cv(training(train_split))
tune_res <- titanic_wflw %>%
tune_grid(resamples = cfold,
grid = grid_regular(learn_rate(),
trees(),
levels = 5))
tune_res %>%
collect_metrics()
tune_res %>%
collect_metrics() %>%
mutate(trees = factor(trees)) %>%
ggplot(aes(learn_rate, mean, color = trees)) +
geom_line(linewidth = 1.5, alpha = 0.6) +
geom_point(size = 2) +
facet_wrap(~ .metric, scales = "free", nrow = 2) +
scale_x_log10(labels = scales::label_number()) +
scale_color_viridis_d(option = "plasma", begin = .9, end = 0)
tune_res %>%
select_best()
tune_res %>%
select_best("accuracy")
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
View()
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit()
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(testing(train_split))
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split)
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_metrics()
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions() %>%
roc_curve(survived, .pred_class)
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions() %>% View()
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions()
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions() %>%
table(.pred_class, survived)
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions() %>%
select(5:6) %>%
table(.pred_class, survived)
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions() %>%
conf_mat(survived, .pred_class)
boost_tree(learn_rate = tune(), tree_depth = 6,
loss_reduction = 0, trees = 15) %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
cfold <- vfold_cv(training(train_split))
tune_res <- titanic_wflw %>%
tune_grid(resamples = cfold,
grid = grid_regular(
learn_rate(),
levels = 5))
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions() %>%
conf_mat(survived, .pred_class)
tune_res <- titanic_wflw %>%
tune_grid(resamples = cfold,
grid = expand.grid("trees" = 15:20,
"learn_rate" = c(0.3, 0.2, 0.1, 0.01, 0.001, 0.0001)))
boost_tree(learn_rate = tune(), tree_depth = 6,
loss_reduction = 0, trees = tune()) %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
cfold <- vfold_cv(training(train_split))
tune_res <- titanic_wflw %>%
tune_grid(resamples = cfold,
grid = expand.grid("trees" = 15:20,
"learn_rate" = c(0.3, 0.2, 0.1, 0.01, 0.001, 0.0001)))
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions() %>%
conf_mat(survived, .pred_class)
boost_tree(learn_rate = tune(), tree_depth = 6,
loss_reduction = tune(), trees = tune()) %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
cfold <- vfold_cv(training(train_split))
tune_res <- titanic_wflw %>%
tune_grid(resamples = cfold,
grid = expand.grid("trees" = 15:20,
"learn_rate" = c(0.3, 0.2, 0.1, 0.01, 0.001, 0.0001),
"loss_reduction" = 1:3))
tune_res %>%
select_best("accuracy")
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions() %>%
conf_mat(survived, .pred_class)
boost_tree(learn_rate = tune(), tree_depth = tune(),
loss_reduction = tune(), trees = tune()) %>%
set_engine("xgboost") %>%
set_mode("classification") -> mod_xgb
workflow() %>%
add_model(mod_xgb) %>%
add_recipe(titanic_rec) -> titanic_wflw
cfold <- vfold_cv(training(train_split))
tune_res <- titanic_wflw %>%
tune_grid(resamples = cfold,
grid = expand.grid("trees" = 15:20,
"learn_rate" = c(0.3, 0.2, 0.1, 0.01, 0.001, 0.0001),
"loss_reduction" = 1:3,
"tree_depth" = 4:9))
tune_res %>%
select_best("accuracy")
tune_res %>%
select_best("accuracy") %>%
finalize_workflow(titanic_wflw, .) %>%
last_fit(train_split) %>%
collect_predictions() %>%
conf_mat(survived, .pred_class)
